{"version":3,"sources":["components/lang-switch/lang-switch.js","components/lang-switch/index.js","components/message-form/message-form.js","components/message-form/index.js","components/app/app.js","components/app/index.js","index.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","LangSwitch","lang","changeLang","classes","FormControl","className","InputLabel","id","Select","labelId","value","onChange","event","target","MenuItem","MyPaper","styled","Paper","MyTypography","Typography","MessageForm","formData","onChangeFormData","elevation","name","variant","Grid","container","item","xs","sm","TextField","firstname","error","label","defaultValue","fullWidth","autoComplete","surname","phone","hasError","helperText","email","message","multiline","minRows","maxRows","StyledPaper","MyButton","Button","InputFieldObject","undefined","this","App","useState","currentLang","setCurrentLang","setFormData","Container","maxWidth","newLang","newFormData","test","length","checkValidation","onClick","resultObject","Object","keys","reduce","acc","console","log","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dcedcaf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst LangSwitch = ({lang, changeLang}) => {\r\n    const classes = useStyles();\r\n\r\n    const handleChange = (event) => {\r\n        changeLang(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">{lang === 'RU' ? 'Язык' : 'Language'}</InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={lang}\r\n                onChange={handleChange}\r\n            >\r\n                <MenuItem value={'RU'}>Русский</MenuItem>\r\n                <MenuItem value={'EN'}>English</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default LangSwitch;","import LangSwitch from \"./lang-switch\";\r\n\r\nexport default LangSwitch;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport styled from 'styled-components';\r\n\r\nconst MyPaper = styled(Paper)`\r\n    margin-top: 100px;\r\n    padding: 30px;\r\n    border-radius: 16px;\r\n    border: 1px solid #bdbdbd;\r\n`;\r\n\r\nconst MyTypography = styled(Typography)`\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst MessageForm = ({ lang, formData, onChangeFormData }) => {\r\n    const handlerChange = (event)=>{\r\n        onChangeFormData( event.target.name, event.target.value );\r\n    }\r\n\r\n    return (\r\n        <MyPaper elevation={3} onChange={handlerChange}>\r\n            <MyTypography variant='h4'>\r\n                {lang === 'RU' ? 'Форма отправки сообщений' : 'Send message form'}\r\n            </MyTypography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        id=\"firstname\"\r\n                        name='firstname'\r\n                        value={formData.firstname.value}\r\n                        error={false}\r\n                        label={lang === 'RU' ? 'Имя' : 'Name'}\r\n                        defaultValue=\"\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        autoComplete=\"given-name\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        id=\"surname\"\r\n                        name='surname'\r\n                        value={formData.surname.value}\r\n                        error={false}\r\n                        label={lang === 'RU' ? 'Фамилия' : 'Surname'}\r\n                        defaultValue=\"\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        autoComplete=\"family-name\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        id=\"phone\"\r\n                        name='phone'\r\n                        value={formData.phone.value}\r\n                        error={formData.phone.hasError}\r\n                        label={lang === 'RU' ? 'Телефон' : 'Phone'}\r\n                        defaultValue=\"\"\r\n                        helperText={formData.phone.hasError && \r\n                            (lang==='RU' ? 'введите корректно номер телефона' : 'phone must be a valid phone')}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        autoComplete=\"tel\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={formData.email.value}\r\n                        error={formData.email.hasError}\r\n                        label={lang === 'RU' ? 'Email адрес' : 'Email address'}\r\n                        defaultValue=\"\"\r\n                        helperText={formData.email.hasError && \r\n                            (lang==='RU' ? 'введите правильный email' : 'email must be a valid email')}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        autoComplete=\"email\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        id=\"message\"\r\n                        name=\"message\"\r\n                        value={formData.message.value}\r\n                        error={formData.message.hasError}\r\n                        label={lang === 'RU' ? 'Сообщение' : 'Message'}\r\n                        multiline\r\n                        minRows={4}\r\n                        maxRows={4}\r\n                        defaultValue=\"\"\r\n                        helperText={formData.message.hasError && \r\n                            (lang==='RU' ? 'сообщение слишком короткое' : 'message is too short')}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </MyPaper>\r\n    );\r\n}\r\n\r\nexport default MessageForm;","import MessageForm from './message-form';\r\n\r\nexport default MessageForm;","import React, { useState } from 'react';\r\nimport LangSwitch from '../lang-switch';\r\nimport MessageForm from '../message-form';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport styled from 'styled-components';\r\n\r\nimport './app.css';\r\n\r\nconst StyledPaper = styled(Paper)`\r\n    background: #00e676;\r\n    padding: 0 50px;\r\n    height: 100vh;\r\n    & *{\r\n        font-weight: 700;\r\n    }\r\n`;\r\n\r\nconst MyButton = styled(Button)`\r\n    background: #ff8f00;\r\n    border: 0px;\r\n    borderRadius: 3px;\r\n    box-shadow: 0 7px 3px -4px #9e9e9e;\r\n    color: white;\r\n    height: 48px;\r\n    padding: 0 30px;\r\n    margin-top: 20px;\r\n    font-weight: 700;\r\n    &:hover{\r\n        background: #ef6c00;\r\n    }\r\n`;\r\n\r\n\r\n// Конструктор объекта\r\nfunction InputFieldObject({ value = '', error = undefined } = {}) {\r\n    this.value = value;    // содержание поля TextField в компоненте MessageForm\r\n    if (error !== undefined) this.hasError = error; // для валидации заполнения полей\r\n}\r\n\r\nconst App = () => {\r\n    const [currentLang, setCurrentLang] = useState('RU');\r\n    const [formData, setFormData] = useState({\r\n        firstname: new InputFieldObject(),\r\n        surname: new InputFieldObject(),\r\n        phone: new InputFieldObject({ error: false }),\r\n        email: new InputFieldObject({ error: false }),\r\n        message: new InputFieldObject({ error: false })\r\n    });\r\n\r\n    const checkValidation = (name, value) => {\r\n        let error = false;\r\n        if (value === '') return error;\r\n\r\n        switch (name) {\r\n            case 'email':\r\n                error = /^\\w+@[\\w]{1,63}[.]+[a-z, A-Z]{2,5}$/.test(value) ? false : true;\r\n                break;\r\n            case 'phone':\r\n                error = (/^[+][\\d]{11}$/.test(value)) || (/^[\\d]{10,11}$/.test(value)) ? false : true;\r\n                break;\r\n            case 'message':\r\n                error = (value.length < 7) ? true : false;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return error;\r\n    }\r\n\r\n    const onChangeFormData = (name, value) => {\r\n        const newFormData = { ...formData };\r\n        newFormData[name].value = value;\r\n        newFormData[name].hasError = checkValidation(name, value);\r\n\r\n        setFormData(newFormData);\r\n    }\r\n\r\n    const onChangeLang = (newLang) => {\r\n        setCurrentLang(newLang);\r\n    }\r\n\r\n    const handlerSubmit = () => {\r\n        const resultObject = Object.keys(formData).reduce((acc, item) => {\r\n            if (formData[item].value === '') {\r\n                return { ...acc }\r\n            } else {\r\n                return { ...acc, ...{ [item]: formData[item].value } }\r\n            }\r\n        }, {});\r\n\r\n        console.log(resultObject);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"md\">\r\n                <StyledPaper elevation={0}>\r\n                    <LangSwitch lang={currentLang} changeLang={onChangeLang} />\r\n                    <MessageForm lang={currentLang} formData={formData} onChangeFormData={onChangeFormData} />\r\n                    <MyButton\r\n                        onClick={handlerSubmit}\r\n                        disabled={formData.phone.hasError || formData.email.hasError || formData.message.hasError}\r\n                    >\r\n                        {currentLang === 'RU' ? 'ОТПРАВИТЬ' : 'SUBMIT'}\r\n                    </MyButton>\r\n                </StyledPaper>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import App from './app';\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}